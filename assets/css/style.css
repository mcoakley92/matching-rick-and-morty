* {
    padding: 0;
    margin: 0;
    box-sizing: border-box; /* keeps original size */
}

/* resets all items */

body {
    height: 100vh;
    background-image: url("../img/background.jpg");
    display: flex;
    
    
}

.overlay {
    position: fixed;
    height: 100vh;
    width: 100vw;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    z-index: 1;
    color: 39bdab;
    top: 0;
    bottom: 0;
    right: 0;
    left: 0;
    background-color: rgba(0, 0, 0, 0.8);
        
}

.overlay-button {
     background-color: rgba(0, 0, 0, 0.8);
     color: 39bdab;
     font-size: 5em;

}

.game-board {
    width: 640px;
    height: 640px;
    background-color: black;
    margin: auto; /*centers vertically and horizontally*/
    display: flex; 
    flex-wrap: wrap;
    /* DEFAULT flex =
    flex-item {
    flex: 1;
    }
    flex-container {
        flex-direction: row;
        flex-wrap: nowrap;
        justify-content: flex-start;
        align-items: stretch;
    }
    WHICH MEANS!
    1. items - each one takes up same amount of space on the screen
    2. container - your items should be layed out in a row
    3. just one row
    4. positioned from left to right
    5. stretched out across the containers height
    BUT!!
    when styling width and height in .card, height changes but width does not - due to "nowrap", which prevents items being layed out across multipe rows. So we overwrite this
    */
    border: 2px solid black;
    perspective: 1000px; /*makes game container 3D*/
}

.card {
    border: 2px solid black;
    width: calc(25% - 10px);
    height: calc(33.33% - 10px); /*allows us to take 10px(margin) off*/
    margin: 5px;
    z-index: 2;
    position: relative;
    transform: scale(1); /* starting point for transform: scale (.97)*/
    transform-style: preserve-3d; /*inserts card into the 3D space in the game board*/
    transition: transform .5s; /*time allows you to observe 3D effect?*/
}

.card:active {
    transform: scale(.97);
    transition: transform .2s;
}

.card.flip {
    transform: rotateY(180deg);
}

.card-back,
.card-front {
    border: 2px solid #21eb3f;
    position: absolute;
    width: 100%;
    height: 100%;
    border-radius: 5px;
    backface-visibility: hidden;
}

.card-front{
    transform: rotateY(180deg);/*flips front back around, after first flip and hiding back visability*/
    border: black;
} 

